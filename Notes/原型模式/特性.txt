原型模式允许通过复制现有的实例来创建新的实例（在Java中，意味着使用clone方法，或者反序列化）。
原型模式的重点在于客户的代码在不知道要实例化何种特定类的情况下，可以制造出新的实例。


用途：
在一个复杂的类层次中，当系统必须从其中的许多类型创建新对象时，考虑原型模型


优点：
向客户隐藏制造新实例的复杂性
提供让客户能够产生未知类型对象的选项
在某些环境下，复制对象比创建新对象更有效


缺点：
对象的复制有时相当复杂